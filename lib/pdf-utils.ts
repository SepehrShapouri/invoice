import { Invoice } from '@/types'
import jsPDF from 'jspdf'


export function generateInvoicePDF(invoice: Invoice, userName: string | undefined, userEmail: string | undefined) {
  const doc = new jsPDF()
  
  // Set font
  doc.setFont('helvetica')
  
  // Header
  doc.setFontSize(24)
  doc.setTextColor(44, 82, 130)
  doc.text('INVOICE', 20, 30)
  
  // Invoice details
  doc.setFontSize(12)
  doc.setTextColor(0, 0, 0)
  doc.text(`Invoice #${invoice.slug}`, 20, 45)
  doc.text(`Date: ${new Date(invoice.createdAt).toLocaleDateString()}`, 20, 52)
  if (invoice.dueDate) {
    doc.text(`Due Date: ${new Date(invoice.dueDate).toLocaleDateString()}`, 20, 59)
  }
  
  // From section
  doc.setFontSize(14)
  doc.setTextColor(44, 82, 130)
  doc.text('From:', 20, 75)
  doc.setFontSize(11)
  doc.setTextColor(0, 0, 0)
  doc.text(userName || 'N/A', 20, 85)
  doc.text(userEmail || 'N/A', 20, 92)
  
  // To section
  doc.setFontSize(14)
  doc.setTextColor(44, 82, 130)
  doc.text('To:', 120, 75)
  doc.setFontSize(11)
  doc.setTextColor(0, 0, 0)
  doc.text(invoice.clientName, 120, 85)
  doc.text(invoice.clientEmail, 120, 92)
  
  // Items table
  let currentY = 110
  
  // Table header
  doc.setFillColor(248, 249, 250)
  doc.rect(20, currentY, 170, 10, 'F')
  doc.setFontSize(10)
  doc.setTextColor(75, 85, 99)
  doc.text('Description', 25, currentY + 7)
  doc.text('Qty', 120, currentY + 7)
  doc.text('Rate', 140, currentY + 7)
  doc.text('Amount', 165, currentY + 7)
  
  currentY += 15
  
  // Table rows
  doc.setFontSize(9)
  doc.setTextColor(0, 0, 0)
  
  invoice.items.forEach((item) => {
    // Handle multi-line descriptions
    const descLines = doc.splitTextToSize(item.description, 90)
    const lineHeight = 5
    const cellHeight = Math.max(lineHeight, descLines.length * lineHeight)
    
    descLines.forEach((line: string, index: number) => {
      doc.text(line, 25, currentY + (index * lineHeight) + 4)
    })
    
    doc.text(item.quantity.toString(), 125, currentY + 4)
    doc.text(`$${item.rate.toFixed(2)}`, 145, currentY + 4)
    doc.text(`$${item.amount.toFixed(2)}`, 170, currentY + 4)
    
    currentY += cellHeight + 3
  })
  
  // Totals
  currentY += 10
  const totalsX = 140
  
  doc.setFontSize(10)
  doc.text('Subtotal:', totalsX, currentY)
  doc.text(`$${invoice.subtotal.toFixed(2)}`, totalsX + 30, currentY)
  
  if (invoice.tax && invoice.tax > 0) {
    currentY += 7
    doc.text('Tax:', totalsX, currentY)
    doc.text(`$${invoice.tax.toFixed(2)}`, totalsX + 30, currentY)
  }
  
  currentY += 10
  doc.setFontSize(12)
  doc.setFont('helvetica', 'bold')
  doc.text('Total:', totalsX, currentY)
  doc.text(`$${invoice.total.toFixed(2)}`, totalsX + 30, currentY)
  
  // Status
  currentY += 15
  doc.setFontSize(10)
  doc.setFont('helvetica', 'normal')
  doc.setTextColor(75, 85, 99)
  doc.text(`Status: ${invoice.status.toUpperCase()}`, 20, currentY)
  
  // Footer
  doc.setFontSize(8)
  doc.setTextColor(156, 163, 175)
  doc.text('Generated by Invoicely', 20, 280)
  
  return doc
}

export function downloadInvoicePDF(invoice: Invoice, userName?: string, userEmail?: string) {
  const doc = generateInvoicePDF(invoice, userName, userEmail)
  doc.save(`invoice-${invoice.slug}.pdf`)
} 